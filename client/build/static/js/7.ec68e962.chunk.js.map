{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/loginpage/LoginPage.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","handleChange","target","name","className","onSubmit","type","placeholder","id","onChange","htmlFor","onClick"],"mappings":"0JAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,2JI6FvFC,sBAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAChBJ,EAASE,YAAiB,CAAEC,QAAOC,kBAGxBL,EAzFG,SAAC,GAA6C,IAA3CG,EAA0C,EAA1CA,iBAAkBD,EAAwB,EAAxBA,kBAAwB,EACnBI,mBAAS,CACjDF,MAAO,GACPC,SAAU,KAHiD,mBACtDE,EADsD,KACrCC,EADqC,KAMrDJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETI,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBAENT,EAAiBC,EAAOC,GAHL,2CAAH,sDAgBZQ,EAAe,SAACH,GAAW,IAAD,EACNA,EAAMI,OAAtBnB,EADsB,EACtBA,MAAOoB,EADe,EACfA,KACfP,EAAe,2BACVD,GADS,kBAEXQ,EAAOpB,MAIZ,OACE,yBAAKqB,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eACb,0BAAMC,SAAUR,EAAcO,UAAU,QACtC,yBAAKA,UAAU,iBACb,sDAEF,yBAAKA,UAAU,eACb,2BACED,KAAK,QACLG,KAAK,QACLvB,MAAOS,EACPY,UAAU,cACVG,YAAY,QACZC,GAAG,QACHC,SAAUR,IAEZ,2BAAOS,QAAQ,QAAQN,UAAU,eAAjC,UAIF,yBAAKA,UAAU,eACb,2BACED,KAAK,WACLG,KAAK,WACLvB,MAAOU,EACPW,UAAU,cACVG,YAAY,WACZE,SAAUR,EACVO,GAAG,aAEL,2BAAOE,QAAQ,WAAWN,UAAU,eAApC,aAIF,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,MAAME,KAAK,UAA7B,iBAGA,4BAAQA,KAAK,SAASF,UAAU,MAAMO,QAASrB,GAA/C","file":"static/js/7.ec68e962.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\r\nimport \"./login.style.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.action\";\r\n\r\nconst LoginPage = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n\r\n    // try {\r\n    //   await auth.signInWithEmailAndPassword(email, password);\r\n    //   this.setState({\r\n    //     email: \"\",\r\n    //     password: \"\",\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    setCredentials({\r\n      ...userCredentials,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login__container\">\r\n      <div className=\"login__background\">\r\n        <div className=\"login__form\">\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <div className=\"login__header\">\r\n              <h3>Login to your account</h3>\r\n            </div>\r\n            <div className=\"form__group\">\r\n              <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                className=\"form__input\"\r\n                placeholder=\"Email\"\r\n                id=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"email\" className=\"form__label\">\r\n                Email\r\n              </label>\r\n            </div>\r\n            <div className=\"form__group\">\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                className=\"form__input\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange}\r\n                id=\"password\"\r\n              />\r\n              <label htmlFor=\"password\" className=\"form__label\">\r\n                Password\r\n              </label>\r\n            </div>\r\n            <div className=\"form__group btn-group\">\r\n              <button className=\"btn\" type=\"submit\">\r\n                Submit &rarr;\r\n              </button>\r\n              <button type=\"button\" className=\"btn\" onClick={googleSignInStart}>\r\n                Google Sign In &rarr;\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n"],"sourceRoot":""}